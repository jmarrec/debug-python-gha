name: Mac Test

on:
  push:

env:
  SDKROOT: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk
  Python_REQUIRED_VERSION: 3.12.2

jobs:
  mac_release:
    name: "${{ matrix.os }}-${{ matrix.arch }}"
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allow_failure }}
    strategy:
      # fail-fast: Default is true, switch to false to allow one platform to fail and still run others
      fail-fast: false
      matrix:
        macos_dev_target: [12.1, 13.0]
        include:
        - macos_dev_target: 12.1
          os: macos-13
          allow_failure: false
          arch: x86_64
        - macos_dev_target: 13.0
          os: macos-14
          allow_failure: false
          arch: arm64

    steps:
    - uses: actions/checkout@v4

    - name: install stuff
      shell: bash
      run: |
        set -e
        set -x
        brew install tree
        rm -Rf $RUNNER_TOOL_CACHE/Python/
        brew --prefix gettext
        ls $(brew --prefix gettext)
        ls $(brew --prefix gettext)/lib

    - name: Set up Python ${{ env.Python_REQUIRED_VERSION }}
      id: setup-python
      uses: jmarrec/setup-python@v5
      with:
        python-version: ${{ env.Python_REQUIRED_VERSION }}

    - name: Create Build Directory
      run: cmake -E make_directory ./build/

    - name: debug tool cache
      shell: bash
      run: |
        tree $RUNNER_TOOL_CACHE/Python/

    - name: Configure CMake
      working-directory: ./build
      shell: bash
      run: |
        cmake -DCMAKE_BUILD_TYPE:STRING=Release \
              -DCMAKE_OSX_DEPLOYMENT_TARGET:STRING=${{ matrix.macos_dev_target }} \
              -DPython_REQUIRED_VERSION:STRING=${{ steps.setup-python.outputs.python-version }} \
              -DPython_ROOT_DIR:PATH=$RUNNER_TOOL_CACHE/Python/${{ steps.setup-python.outputs.python-version }}/x64/ \
              ../

    - name:  Dump CMakeCache
      working-directory: ./build
      shell: bash
      run: |
        cat CMakeCache.txt

